name: Publish Package

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
      - "*@*" # Push events to matching any package tag, i.e. create-pp-dev@1.0.0

jobs:
  detect-packages:
    # prevents this action from running on forks
    if: github.repository == 'mi-examples/pp-dev-js'
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-packages.outputs.packages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed packages
        id: set-packages
        run: |
          if [[ $GITHUB_REF_NAME == "main" ]]; then
            # For main branch, we need to find changed packages
            git fetch --prune || true
            changed_files=$(git diff --name-only HEAD~1 HEAD)
            packages=$(echo "$changed_files" | grep -o 'packages/[^/]*' | cut -d'/' -f2 | sort -u | jq -Rsc 'split("\\n") | map(select(length > 0))')
          else
            # For tags, determine package name based on tag format
            if [[ $GITHUB_REF_NAME =~ ^v ]]; then
              packages='["pp-dev"]'
            else
              pkg_name=${GITHUB_REF_NAME%@*}
              packages="[\\"$pkg_name\\"]"
            fi
          fi
          echo "packages=$packages" >> $GITHUB_OUTPUT

  publish:
    needs: detect-packages
    if: ${{ needs.detect-packages.outputs.packages != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    environment: Release
    strategy:
      matrix:
        package: ${{ fromJSON(needs.detect-packages.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Install deps and build
        working-directory: ./packages/${{ matrix.package }}
        run: |
          npm install
          npm run build

      - name: Release and Publish
        working-directory: ./packages/${{ matrix.package }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
          NPM_TOKEN: ${{ secrets.npm_token }}
        run: |
          if [[ $GITHUB_REF_NAME == "main" ]]; then
            npm run release
          else
            npm publish --access public
          fi
