name: Test Package Publishing

on:
  # Only manual triggers to avoid accidental publishes
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to test (leave empty for all)'
        required: false
        type: string
        default: ''
      dryRun:
        description: 'Run in dry-run mode (no actual publishing)'
        required: false
        type: boolean
        default: true

jobs:
  detect-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-packages.outputs.packages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get packages to test
        id: set-packages
        run: |
          packages="[]" # Default to empty array
          if [[ -n "${{ github.event.inputs.package }}" ]]; then
            # Use specified package
            packages="[\"${{ github.event.inputs.package }}\"]"
          else
            # Use all packages
            all_packages=($(ls -d packages/* | cut -d'/' -f2))
            if [[ ${#all_packages[@]} -gt 0 ]]; then
              packages=$(printf '"%s",' "${all_packages[@]}" | sed 's/,$//' | awk '{print "["$0"]"}')
            fi
          fi
          echo "packages=$packages" >> $GITHUB_OUTPUT
          echo "Testing packages: $packages"

  test-publish:
    needs: detect-packages
    if: ${{ needs.detect-packages.outputs.packages != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.detect-packages.outputs.packages) }}
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install deps and build
        run: |
          npm install
          npm run build

      - name: Test Release Process (Dry Run)
        if: ${{ github.event.inputs.dryRun == true }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
          NPM_TOKEN: ${{ secrets.npm_token }}
        run: |
          echo "Running in dry-run mode"
          npx semantic-release --dry-run

      - name: Run Full Release Process
        if: ${{ github.event.inputs.dryRun == false }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
          NPM_TOKEN: ${{ secrets.npm_token }}
        run: |
          echo "Running full release process"
          npm run release 